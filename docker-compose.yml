version: '3.4'

services:
  database:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    expose:
      - 27017
    volumes:
      - ./database:data/db
    environment:
      - AUTH=no
    networks:
      - mongo-network

  app-whycry:
    image: whycry:latest
    container_name: backend
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    networks:
      - mongo-network
    depends_on:
      - databse
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    container_name: elastic
    enviroment:
      - bootstrap.memory_lock=true
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 600M

  kibana:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    container_name: kibana
    ports: 
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    networks:
      - elastic
    deploy:
      resources:
        limits: 
          cpus: '0.50'
          memory: 600M

  logstash: 
    image: docker.elastic.co/logstash/logstash:8.6.0
    container_name: logstash
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elastic
    depends_on:
      - elasticsearch
    deploy:
     resources:
       limits: 
         cpus: '0.50'
         memory: 600M
      
networks:
  mongo-network:
    driver: bridge
  elastic:
    driver: bridge

volumes:
 elasticsearch_data:
   driver: local